// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Xml.Linq;
using Azure.Core;

namespace Azure.Template.Models
{
    public partial class Prediction
    {
        internal static Prediction DeserializePrediction(JsonElement element)
        {
            Optional<float> probability = default;
            Optional<Guid> tagId = default;
            Optional<string> tagName = default;
            Optional<BoundingBox> boundingBox = default;
            Optional<TagType?> tagType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("probability"))
                {
                    probability = property.Value.GetSingle();
                    continue;
                }
                if (property.NameEquals("tagId"))
                {
                    tagId = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("tagName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        tagName = null;
                        continue;
                    }
                    tagName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("boundingBox"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        boundingBox = null;
                        continue;
                    }
                    boundingBox = BoundingBox.DeserializeBoundingBox(property.Value);
                    continue;
                }
                if (property.NameEquals("tagType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        tagType = null;
                        continue;
                    }
                    tagType = new TagType(property.Value.GetString());
                    continue;
                }
            }
            return new Prediction(Optional.ToNullable(probability), Optional.ToNullable(tagId), tagName.Value, boundingBox.Value, Optional.ToNullable(tagType));
        }

        internal static Prediction DeserializePrediction(XElement element)
        {
            float? probability = default;
            Guid? tagId = default;
            string tagName = default;
            BoundingBox boundingBox = default;
            TagType? tagType = default;
            if (element.Element("probability") is XElement probabilityElement)
            {
                probability = (float?)probabilityElement;
            }
            if (element.Element("tagId") is XElement tagIdElement)
            {
                tagId = new Guid(tagIdElement.Value);
            }
            if (element.Element("tagName") is XElement tagNameElement)
            {
                tagName = (string)tagNameElement;
            }
            if (element.Element("boundingBox") is XElement boundingBoxElement)
            {
                boundingBox = BoundingBox.DeserializeBoundingBox(boundingBoxElement);
            }
            if (element.Element("tagType") is XElement tagTypeElement)
            {
                tagType = new TagType(tagTypeElement.Value);
            }
            return new Prediction(probability, tagId, tagName, boundingBox, tagType);
        }
    }
}
