// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Template.Models
{
    /// <summary> The error code. </summary>
    public readonly partial struct CustomVisionErrorCodes : IEquatable<CustomVisionErrorCodes>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="CustomVisionErrorCodes"/> values are the same. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CustomVisionErrorCodes(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NoErrorValue = "NoError";
        private const string BadRequestValue = "BadRequest";
        private const string BadRequestExceededBatchSizeValue = "BadRequestExceededBatchSize";
        private const string BadRequestNotSupportedValue = "BadRequestNotSupported";
        private const string BadRequestInvalidIdsValue = "BadRequestInvalidIds";
        private const string BadRequestProjectNameValue = "BadRequestProjectName";
        private const string BadRequestProjectNameNotUniqueValue = "BadRequestProjectNameNotUnique";
        private const string BadRequestProjectDescriptionValue = "BadRequestProjectDescription";
        private const string BadRequestProjectUnknownDomainValue = "BadRequestProjectUnknownDomain";
        private const string BadRequestProjectUnknownClassificationValue = "BadRequestProjectUnknownClassification";
        private const string BadRequestProjectUnsupportedDomainTypeChangeValue = "BadRequestProjectUnsupportedDomainTypeChange";
        private const string BadRequestProjectUnsupportedExportPlatformValue = "BadRequestProjectUnsupportedExportPlatform";
        private const string BadRequestProjectImagePreprocessingSettingsValue = "BadRequestProjectImagePreprocessingSettings";
        private const string BadRequestProjectDuplicatedValue = "BadRequestProjectDuplicated";
        private const string BadRequestIterationNameValue = "BadRequestIterationName";
        private const string BadRequestIterationNameNotUniqueValue = "BadRequestIterationNameNotUnique";
        private const string BadRequestIterationDescriptionValue = "BadRequestIterationDescription";
        private const string BadRequestIterationIsNotTrainedValue = "BadRequestIterationIsNotTrained";
        private const string BadRequestIterationValidationFailedValue = "BadRequestIterationValidationFailed";
        private const string BadRequestWorkspaceCannotBeModifiedValue = "BadRequestWorkspaceCannotBeModified";
        private const string BadRequestWorkspaceNotDeletableValue = "BadRequestWorkspaceNotDeletable";
        private const string BadRequestTagNameValue = "BadRequestTagName";
        private const string BadRequestTagNameNotUniqueValue = "BadRequestTagNameNotUnique";
        private const string BadRequestTagDescriptionValue = "BadRequestTagDescription";
        private const string BadRequestTagTypeValue = "BadRequestTagType";
        private const string BadRequestMultipleNegativeTagValue = "BadRequestMultipleNegativeTag";
        private const string BadRequestMultipleGeneralProductTagValue = "BadRequestMultipleGeneralProductTag";
        private const string BadRequestImageTagsValue = "BadRequestImageTags";
        private const string BadRequestImageRegionsValue = "BadRequestImageRegions";
        private const string BadRequestNegativeAndRegularTagOnSameImageValue = "BadRequestNegativeAndRegularTagOnSameImage";
        private const string BadRequestUnsupportedDomainValue = "BadRequestUnsupportedDomain";
        private const string BadRequestRequiredParamIsNullValue = "BadRequestRequiredParamIsNull";
        private const string BadRequestIterationIsPublishedValue = "BadRequestIterationIsPublished";
        private const string BadRequestInvalidPublishNameValue = "BadRequestInvalidPublishName";
        private const string BadRequestInvalidPublishTargetValue = "BadRequestInvalidPublishTarget";
        private const string BadRequestUnpublishFailedValue = "BadRequestUnpublishFailed";
        private const string BadRequestIterationNotPublishedValue = "BadRequestIterationNotPublished";
        private const string BadRequestSubscriptionApiValue = "BadRequestSubscriptionApi";
        private const string BadRequestExceedProjectLimitValue = "BadRequestExceedProjectLimit";
        private const string BadRequestExceedIterationPerProjectLimitValue = "BadRequestExceedIterationPerProjectLimit";
        private const string BadRequestExceedTagPerProjectLimitValue = "BadRequestExceedTagPerProjectLimit";
        private const string BadRequestExceedTagPerImageLimitValue = "BadRequestExceedTagPerImageLimit";
        private const string BadRequestExceededQuotaValue = "BadRequestExceededQuota";
        private const string BadRequestCannotMigrateProjectWithNameValue = "BadRequestCannotMigrateProjectWithName";
        private const string BadRequestNotLimitedTrialValue = "BadRequestNotLimitedTrial";
        private const string BadRequestImageBatchValue = "BadRequestImageBatch";
        private const string BadRequestImageStreamValue = "BadRequestImageStream";
        private const string BadRequestImageUrlValue = "BadRequestImageUrl";
        private const string BadRequestImageFormatValue = "BadRequestImageFormat";
        private const string BadRequestImageSizeBytesValue = "BadRequestImageSizeBytes";
        private const string BadRequestImageDimensionsValue = "BadRequestImageDimensions";
        private const string BadRequestImageExceededCountValue = "BadRequestImageExceededCount";
        private const string BadRequestTrainingNotNeededValue = "BadRequestTrainingNotNeeded";
        private const string BadRequestTrainingNotNeededButTrainingPipelineUpdatedValue = "BadRequestTrainingNotNeededButTrainingPipelineUpdated";
        private const string BadRequestTrainingValidationFailedValue = "BadRequestTrainingValidationFailed";
        private const string BadRequestClassificationTrainingValidationFailedValue = "BadRequestClassificationTrainingValidationFailed";
        private const string BadRequestMultiClassClassificationTrainingValidationFailedValue = "BadRequestMultiClassClassificationTrainingValidationFailed";
        private const string BadRequestMultiLabelClassificationTrainingValidationFailedValue = "BadRequestMultiLabelClassificationTrainingValidationFailed";
        private const string BadRequestDetectionTrainingValidationFailedValue = "BadRequestDetectionTrainingValidationFailed";
        private const string BadRequestTrainingAlreadyInProgressValue = "BadRequestTrainingAlreadyInProgress";
        private const string BadRequestDetectionTrainingNotAllowNegativeTagValue = "BadRequestDetectionTrainingNotAllowNegativeTag";
        private const string BadRequestInvalidEmailAddressValue = "BadRequestInvalidEmailAddress";
        private const string BadRequestDomainNotSupportedForAdvancedTrainingValue = "BadRequestDomainNotSupportedForAdvancedTraining";
        private const string BadRequestExportPlatformNotSupportedForAdvancedTrainingValue = "BadRequestExportPlatformNotSupportedForAdvancedTraining";
        private const string BadRequestReservedBudgetInHoursNotEnoughForAdvancedTrainingValue = "BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining";
        private const string BadRequestExportValidationFailedValue = "BadRequestExportValidationFailed";
        private const string BadRequestExportAlreadyInProgressValue = "BadRequestExportAlreadyInProgress";
        private const string BadRequestPredictionIdsMissingValue = "BadRequestPredictionIdsMissing";
        private const string BadRequestPredictionIdsExceededCountValue = "BadRequestPredictionIdsExceededCount";
        private const string BadRequestPredictionTagsExceededCountValue = "BadRequestPredictionTagsExceededCount";
        private const string BadRequestPredictionResultsExceededCountValue = "BadRequestPredictionResultsExceededCount";
        private const string BadRequestPredictionInvalidApplicationNameValue = "BadRequestPredictionInvalidApplicationName";
        private const string BadRequestPredictionInvalidQueryParametersValue = "BadRequestPredictionInvalidQueryParameters";
        private const string BadRequestInvalidImportTokenValue = "BadRequestInvalidImportToken";
        private const string BadRequestExportWhileTrainingValue = "BadRequestExportWhileTraining";
        private const string BadRequestImageMetadataKeyValue = "BadRequestImageMetadataKey";
        private const string BadRequestImageMetadataValueValue = "BadRequestImageMetadataValue";
        private const string BadRequestOperationNotSupportedValue = "BadRequestOperationNotSupported";
        private const string BadRequestInvalidArtifactUriValue = "BadRequestInvalidArtifactUri";
        private const string BadRequestCustomerManagedKeyRevokedValue = "BadRequestCustomerManagedKeyRevoked";
        private const string BadRequestInvalidValue = "BadRequestInvalid";
        private const string UnsupportedMediaTypeValue = "UnsupportedMediaType";
        private const string ForbiddenValue = "Forbidden";
        private const string ForbiddenUserValue = "ForbiddenUser";
        private const string ForbiddenUserResourceValue = "ForbiddenUserResource";
        private const string ForbiddenUserSignupDisabledValue = "ForbiddenUserSignupDisabled";
        private const string ForbiddenUserSignupAllowanceExceededValue = "ForbiddenUserSignupAllowanceExceeded";
        private const string ForbiddenUserDoesNotExistValue = "ForbiddenUserDoesNotExist";
        private const string ForbiddenUserDisabledValue = "ForbiddenUserDisabled";
        private const string ForbiddenUserInsufficientCapabilityValue = "ForbiddenUserInsufficientCapability";
        private const string ForbiddenDRModeEnabledValue = "ForbiddenDRModeEnabled";
        private const string ForbiddenInvalidValue = "ForbiddenInvalid";
        private const string NotFoundValue = "NotFound";
        private const string NotFoundProjectValue = "NotFoundProject";
        private const string NotFoundProjectDefaultIterationValue = "NotFoundProjectDefaultIteration";
        private const string NotFoundIterationValue = "NotFoundIteration";
        private const string NotFoundIterationPerformanceValue = "NotFoundIterationPerformance";
        private const string NotFoundTagValue = "NotFoundTag";
        private const string NotFoundImageValue = "NotFoundImage";
        private const string NotFoundDomainValue = "NotFoundDomain";
        private const string NotFoundApimSubscriptionValue = "NotFoundApimSubscription";
        private const string NotFoundInvalidValue = "NotFoundInvalid";
        private const string ConflictValue = "Conflict";
        private const string ConflictInvalidValue = "ConflictInvalid";
        private const string ErrorUnknownValue = "ErrorUnknown";
        private const string ErrorIterationCopyFailedValue = "ErrorIterationCopyFailed";
        private const string ErrorPreparePerformanceMigrationFailedValue = "ErrorPreparePerformanceMigrationFailed";
        private const string ErrorProjectInvalidWorkspaceValue = "ErrorProjectInvalidWorkspace";
        private const string ErrorProjectInvalidPipelineConfigurationValue = "ErrorProjectInvalidPipelineConfiguration";
        private const string ErrorProjectInvalidDomainValue = "ErrorProjectInvalidDomain";
        private const string ErrorProjectTrainingRequestFailedValue = "ErrorProjectTrainingRequestFailed";
        private const string ErrorProjectImportRequestFailedValue = "ErrorProjectImportRequestFailed";
        private const string ErrorProjectExportRequestFailedValue = "ErrorProjectExportRequestFailed";
        private const string ErrorFeaturizationServiceUnavailableValue = "ErrorFeaturizationServiceUnavailable";
        private const string ErrorFeaturizationQueueTimeoutValue = "ErrorFeaturizationQueueTimeout";
        private const string ErrorFeaturizationInvalidFeaturizerValue = "ErrorFeaturizationInvalidFeaturizer";
        private const string ErrorFeaturizationAugmentationUnavailableValue = "ErrorFeaturizationAugmentationUnavailable";
        private const string ErrorFeaturizationUnrecognizedJobValue = "ErrorFeaturizationUnrecognizedJob";
        private const string ErrorFeaturizationAugmentationErrorValue = "ErrorFeaturizationAugmentationError";
        private const string ErrorExporterInvalidPlatformValue = "ErrorExporterInvalidPlatform";
        private const string ErrorExporterInvalidFeaturizerValue = "ErrorExporterInvalidFeaturizer";
        private const string ErrorExporterInvalidClassifierValue = "ErrorExporterInvalidClassifier";
        private const string ErrorPredictionServiceUnavailableValue = "ErrorPredictionServiceUnavailable";
        private const string ErrorPredictionModelNotFoundValue = "ErrorPredictionModelNotFound";
        private const string ErrorPredictionModelNotCachedValue = "ErrorPredictionModelNotCached";
        private const string ErrorPredictionValue = "ErrorPrediction";
        private const string ErrorPredictionStorageValue = "ErrorPredictionStorage";
        private const string ErrorRegionProposalValue = "ErrorRegionProposal";
        private const string ErrorUnknownBaseModelValue = "ErrorUnknownBaseModel";
        private const string ErrorInvalidValue = "ErrorInvalid";

        /// <summary> NoError. </summary>
        public static CustomVisionErrorCodes NoError { get; } = new CustomVisionErrorCodes(NoErrorValue);
        /// <summary> BadRequest. </summary>
        public static CustomVisionErrorCodes BadRequest { get; } = new CustomVisionErrorCodes(BadRequestValue);
        /// <summary> BadRequestExceededBatchSize. </summary>
        public static CustomVisionErrorCodes BadRequestExceededBatchSize { get; } = new CustomVisionErrorCodes(BadRequestExceededBatchSizeValue);
        /// <summary> BadRequestNotSupported. </summary>
        public static CustomVisionErrorCodes BadRequestNotSupported { get; } = new CustomVisionErrorCodes(BadRequestNotSupportedValue);
        /// <summary> BadRequestInvalidIds. </summary>
        public static CustomVisionErrorCodes BadRequestInvalidIds { get; } = new CustomVisionErrorCodes(BadRequestInvalidIdsValue);
        /// <summary> BadRequestProjectName. </summary>
        public static CustomVisionErrorCodes BadRequestProjectName { get; } = new CustomVisionErrorCodes(BadRequestProjectNameValue);
        /// <summary> BadRequestProjectNameNotUnique. </summary>
        public static CustomVisionErrorCodes BadRequestProjectNameNotUnique { get; } = new CustomVisionErrorCodes(BadRequestProjectNameNotUniqueValue);
        /// <summary> BadRequestProjectDescription. </summary>
        public static CustomVisionErrorCodes BadRequestProjectDescription { get; } = new CustomVisionErrorCodes(BadRequestProjectDescriptionValue);
        /// <summary> BadRequestProjectUnknownDomain. </summary>
        public static CustomVisionErrorCodes BadRequestProjectUnknownDomain { get; } = new CustomVisionErrorCodes(BadRequestProjectUnknownDomainValue);
        /// <summary> BadRequestProjectUnknownClassification. </summary>
        public static CustomVisionErrorCodes BadRequestProjectUnknownClassification { get; } = new CustomVisionErrorCodes(BadRequestProjectUnknownClassificationValue);
        /// <summary> BadRequestProjectUnsupportedDomainTypeChange. </summary>
        public static CustomVisionErrorCodes BadRequestProjectUnsupportedDomainTypeChange { get; } = new CustomVisionErrorCodes(BadRequestProjectUnsupportedDomainTypeChangeValue);
        /// <summary> BadRequestProjectUnsupportedExportPlatform. </summary>
        public static CustomVisionErrorCodes BadRequestProjectUnsupportedExportPlatform { get; } = new CustomVisionErrorCodes(BadRequestProjectUnsupportedExportPlatformValue);
        /// <summary> BadRequestProjectImagePreprocessingSettings. </summary>
        public static CustomVisionErrorCodes BadRequestProjectImagePreprocessingSettings { get; } = new CustomVisionErrorCodes(BadRequestProjectImagePreprocessingSettingsValue);
        /// <summary> BadRequestProjectDuplicated. </summary>
        public static CustomVisionErrorCodes BadRequestProjectDuplicated { get; } = new CustomVisionErrorCodes(BadRequestProjectDuplicatedValue);
        /// <summary> BadRequestIterationName. </summary>
        public static CustomVisionErrorCodes BadRequestIterationName { get; } = new CustomVisionErrorCodes(BadRequestIterationNameValue);
        /// <summary> BadRequestIterationNameNotUnique. </summary>
        public static CustomVisionErrorCodes BadRequestIterationNameNotUnique { get; } = new CustomVisionErrorCodes(BadRequestIterationNameNotUniqueValue);
        /// <summary> BadRequestIterationDescription. </summary>
        public static CustomVisionErrorCodes BadRequestIterationDescription { get; } = new CustomVisionErrorCodes(BadRequestIterationDescriptionValue);
        /// <summary> BadRequestIterationIsNotTrained. </summary>
        public static CustomVisionErrorCodes BadRequestIterationIsNotTrained { get; } = new CustomVisionErrorCodes(BadRequestIterationIsNotTrainedValue);
        /// <summary> BadRequestIterationValidationFailed. </summary>
        public static CustomVisionErrorCodes BadRequestIterationValidationFailed { get; } = new CustomVisionErrorCodes(BadRequestIterationValidationFailedValue);
        /// <summary> BadRequestWorkspaceCannotBeModified. </summary>
        public static CustomVisionErrorCodes BadRequestWorkspaceCannotBeModified { get; } = new CustomVisionErrorCodes(BadRequestWorkspaceCannotBeModifiedValue);
        /// <summary> BadRequestWorkspaceNotDeletable. </summary>
        public static CustomVisionErrorCodes BadRequestWorkspaceNotDeletable { get; } = new CustomVisionErrorCodes(BadRequestWorkspaceNotDeletableValue);
        /// <summary> BadRequestTagName. </summary>
        public static CustomVisionErrorCodes BadRequestTagName { get; } = new CustomVisionErrorCodes(BadRequestTagNameValue);
        /// <summary> BadRequestTagNameNotUnique. </summary>
        public static CustomVisionErrorCodes BadRequestTagNameNotUnique { get; } = new CustomVisionErrorCodes(BadRequestTagNameNotUniqueValue);
        /// <summary> BadRequestTagDescription. </summary>
        public static CustomVisionErrorCodes BadRequestTagDescription { get; } = new CustomVisionErrorCodes(BadRequestTagDescriptionValue);
        /// <summary> BadRequestTagType. </summary>
        public static CustomVisionErrorCodes BadRequestTagType { get; } = new CustomVisionErrorCodes(BadRequestTagTypeValue);
        /// <summary> BadRequestMultipleNegativeTag. </summary>
        public static CustomVisionErrorCodes BadRequestMultipleNegativeTag { get; } = new CustomVisionErrorCodes(BadRequestMultipleNegativeTagValue);
        /// <summary> BadRequestMultipleGeneralProductTag. </summary>
        public static CustomVisionErrorCodes BadRequestMultipleGeneralProductTag { get; } = new CustomVisionErrorCodes(BadRequestMultipleGeneralProductTagValue);
        /// <summary> BadRequestImageTags. </summary>
        public static CustomVisionErrorCodes BadRequestImageTags { get; } = new CustomVisionErrorCodes(BadRequestImageTagsValue);
        /// <summary> BadRequestImageRegions. </summary>
        public static CustomVisionErrorCodes BadRequestImageRegions { get; } = new CustomVisionErrorCodes(BadRequestImageRegionsValue);
        /// <summary> BadRequestNegativeAndRegularTagOnSameImage. </summary>
        public static CustomVisionErrorCodes BadRequestNegativeAndRegularTagOnSameImage { get; } = new CustomVisionErrorCodes(BadRequestNegativeAndRegularTagOnSameImageValue);
        /// <summary> BadRequestUnsupportedDomain. </summary>
        public static CustomVisionErrorCodes BadRequestUnsupportedDomain { get; } = new CustomVisionErrorCodes(BadRequestUnsupportedDomainValue);
        /// <summary> BadRequestRequiredParamIsNull. </summary>
        public static CustomVisionErrorCodes BadRequestRequiredParamIsNull { get; } = new CustomVisionErrorCodes(BadRequestRequiredParamIsNullValue);
        /// <summary> BadRequestIterationIsPublished. </summary>
        public static CustomVisionErrorCodes BadRequestIterationIsPublished { get; } = new CustomVisionErrorCodes(BadRequestIterationIsPublishedValue);
        /// <summary> BadRequestInvalidPublishName. </summary>
        public static CustomVisionErrorCodes BadRequestInvalidPublishName { get; } = new CustomVisionErrorCodes(BadRequestInvalidPublishNameValue);
        /// <summary> BadRequestInvalidPublishTarget. </summary>
        public static CustomVisionErrorCodes BadRequestInvalidPublishTarget { get; } = new CustomVisionErrorCodes(BadRequestInvalidPublishTargetValue);
        /// <summary> BadRequestUnpublishFailed. </summary>
        public static CustomVisionErrorCodes BadRequestUnpublishFailed { get; } = new CustomVisionErrorCodes(BadRequestUnpublishFailedValue);
        /// <summary> BadRequestIterationNotPublished. </summary>
        public static CustomVisionErrorCodes BadRequestIterationNotPublished { get; } = new CustomVisionErrorCodes(BadRequestIterationNotPublishedValue);
        /// <summary> BadRequestSubscriptionApi. </summary>
        public static CustomVisionErrorCodes BadRequestSubscriptionApi { get; } = new CustomVisionErrorCodes(BadRequestSubscriptionApiValue);
        /// <summary> BadRequestExceedProjectLimit. </summary>
        public static CustomVisionErrorCodes BadRequestExceedProjectLimit { get; } = new CustomVisionErrorCodes(BadRequestExceedProjectLimitValue);
        /// <summary> BadRequestExceedIterationPerProjectLimit. </summary>
        public static CustomVisionErrorCodes BadRequestExceedIterationPerProjectLimit { get; } = new CustomVisionErrorCodes(BadRequestExceedIterationPerProjectLimitValue);
        /// <summary> BadRequestExceedTagPerProjectLimit. </summary>
        public static CustomVisionErrorCodes BadRequestExceedTagPerProjectLimit { get; } = new CustomVisionErrorCodes(BadRequestExceedTagPerProjectLimitValue);
        /// <summary> BadRequestExceedTagPerImageLimit. </summary>
        public static CustomVisionErrorCodes BadRequestExceedTagPerImageLimit { get; } = new CustomVisionErrorCodes(BadRequestExceedTagPerImageLimitValue);
        /// <summary> BadRequestExceededQuota. </summary>
        public static CustomVisionErrorCodes BadRequestExceededQuota { get; } = new CustomVisionErrorCodes(BadRequestExceededQuotaValue);
        /// <summary> BadRequestCannotMigrateProjectWithName. </summary>
        public static CustomVisionErrorCodes BadRequestCannotMigrateProjectWithName { get; } = new CustomVisionErrorCodes(BadRequestCannotMigrateProjectWithNameValue);
        /// <summary> BadRequestNotLimitedTrial. </summary>
        public static CustomVisionErrorCodes BadRequestNotLimitedTrial { get; } = new CustomVisionErrorCodes(BadRequestNotLimitedTrialValue);
        /// <summary> BadRequestImageBatch. </summary>
        public static CustomVisionErrorCodes BadRequestImageBatch { get; } = new CustomVisionErrorCodes(BadRequestImageBatchValue);
        /// <summary> BadRequestImageStream. </summary>
        public static CustomVisionErrorCodes BadRequestImageStream { get; } = new CustomVisionErrorCodes(BadRequestImageStreamValue);
        /// <summary> BadRequestImageUrl. </summary>
        public static CustomVisionErrorCodes BadRequestImageUrl { get; } = new CustomVisionErrorCodes(BadRequestImageUrlValue);
        /// <summary> BadRequestImageFormat. </summary>
        public static CustomVisionErrorCodes BadRequestImageFormat { get; } = new CustomVisionErrorCodes(BadRequestImageFormatValue);
        /// <summary> BadRequestImageSizeBytes. </summary>
        public static CustomVisionErrorCodes BadRequestImageSizeBytes { get; } = new CustomVisionErrorCodes(BadRequestImageSizeBytesValue);
        /// <summary> BadRequestImageDimensions. </summary>
        public static CustomVisionErrorCodes BadRequestImageDimensions { get; } = new CustomVisionErrorCodes(BadRequestImageDimensionsValue);
        /// <summary> BadRequestImageExceededCount. </summary>
        public static CustomVisionErrorCodes BadRequestImageExceededCount { get; } = new CustomVisionErrorCodes(BadRequestImageExceededCountValue);
        /// <summary> BadRequestTrainingNotNeeded. </summary>
        public static CustomVisionErrorCodes BadRequestTrainingNotNeeded { get; } = new CustomVisionErrorCodes(BadRequestTrainingNotNeededValue);
        /// <summary> BadRequestTrainingNotNeededButTrainingPipelineUpdated. </summary>
        public static CustomVisionErrorCodes BadRequestTrainingNotNeededButTrainingPipelineUpdated { get; } = new CustomVisionErrorCodes(BadRequestTrainingNotNeededButTrainingPipelineUpdatedValue);
        /// <summary> BadRequestTrainingValidationFailed. </summary>
        public static CustomVisionErrorCodes BadRequestTrainingValidationFailed { get; } = new CustomVisionErrorCodes(BadRequestTrainingValidationFailedValue);
        /// <summary> BadRequestClassificationTrainingValidationFailed. </summary>
        public static CustomVisionErrorCodes BadRequestClassificationTrainingValidationFailed { get; } = new CustomVisionErrorCodes(BadRequestClassificationTrainingValidationFailedValue);
        /// <summary> BadRequestMultiClassClassificationTrainingValidationFailed. </summary>
        public static CustomVisionErrorCodes BadRequestMultiClassClassificationTrainingValidationFailed { get; } = new CustomVisionErrorCodes(BadRequestMultiClassClassificationTrainingValidationFailedValue);
        /// <summary> BadRequestMultiLabelClassificationTrainingValidationFailed. </summary>
        public static CustomVisionErrorCodes BadRequestMultiLabelClassificationTrainingValidationFailed { get; } = new CustomVisionErrorCodes(BadRequestMultiLabelClassificationTrainingValidationFailedValue);
        /// <summary> BadRequestDetectionTrainingValidationFailed. </summary>
        public static CustomVisionErrorCodes BadRequestDetectionTrainingValidationFailed { get; } = new CustomVisionErrorCodes(BadRequestDetectionTrainingValidationFailedValue);
        /// <summary> BadRequestTrainingAlreadyInProgress. </summary>
        public static CustomVisionErrorCodes BadRequestTrainingAlreadyInProgress { get; } = new CustomVisionErrorCodes(BadRequestTrainingAlreadyInProgressValue);
        /// <summary> BadRequestDetectionTrainingNotAllowNegativeTag. </summary>
        public static CustomVisionErrorCodes BadRequestDetectionTrainingNotAllowNegativeTag { get; } = new CustomVisionErrorCodes(BadRequestDetectionTrainingNotAllowNegativeTagValue);
        /// <summary> BadRequestInvalidEmailAddress. </summary>
        public static CustomVisionErrorCodes BadRequestInvalidEmailAddress { get; } = new CustomVisionErrorCodes(BadRequestInvalidEmailAddressValue);
        /// <summary> BadRequestDomainNotSupportedForAdvancedTraining. </summary>
        public static CustomVisionErrorCodes BadRequestDomainNotSupportedForAdvancedTraining { get; } = new CustomVisionErrorCodes(BadRequestDomainNotSupportedForAdvancedTrainingValue);
        /// <summary> BadRequestExportPlatformNotSupportedForAdvancedTraining. </summary>
        public static CustomVisionErrorCodes BadRequestExportPlatformNotSupportedForAdvancedTraining { get; } = new CustomVisionErrorCodes(BadRequestExportPlatformNotSupportedForAdvancedTrainingValue);
        /// <summary> BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining. </summary>
        public static CustomVisionErrorCodes BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining { get; } = new CustomVisionErrorCodes(BadRequestReservedBudgetInHoursNotEnoughForAdvancedTrainingValue);
        /// <summary> BadRequestExportValidationFailed. </summary>
        public static CustomVisionErrorCodes BadRequestExportValidationFailed { get; } = new CustomVisionErrorCodes(BadRequestExportValidationFailedValue);
        /// <summary> BadRequestExportAlreadyInProgress. </summary>
        public static CustomVisionErrorCodes BadRequestExportAlreadyInProgress { get; } = new CustomVisionErrorCodes(BadRequestExportAlreadyInProgressValue);
        /// <summary> BadRequestPredictionIdsMissing. </summary>
        public static CustomVisionErrorCodes BadRequestPredictionIdsMissing { get; } = new CustomVisionErrorCodes(BadRequestPredictionIdsMissingValue);
        /// <summary> BadRequestPredictionIdsExceededCount. </summary>
        public static CustomVisionErrorCodes BadRequestPredictionIdsExceededCount { get; } = new CustomVisionErrorCodes(BadRequestPredictionIdsExceededCountValue);
        /// <summary> BadRequestPredictionTagsExceededCount. </summary>
        public static CustomVisionErrorCodes BadRequestPredictionTagsExceededCount { get; } = new CustomVisionErrorCodes(BadRequestPredictionTagsExceededCountValue);
        /// <summary> BadRequestPredictionResultsExceededCount. </summary>
        public static CustomVisionErrorCodes BadRequestPredictionResultsExceededCount { get; } = new CustomVisionErrorCodes(BadRequestPredictionResultsExceededCountValue);
        /// <summary> BadRequestPredictionInvalidApplicationName. </summary>
        public static CustomVisionErrorCodes BadRequestPredictionInvalidApplicationName { get; } = new CustomVisionErrorCodes(BadRequestPredictionInvalidApplicationNameValue);
        /// <summary> BadRequestPredictionInvalidQueryParameters. </summary>
        public static CustomVisionErrorCodes BadRequestPredictionInvalidQueryParameters { get; } = new CustomVisionErrorCodes(BadRequestPredictionInvalidQueryParametersValue);
        /// <summary> BadRequestInvalidImportToken. </summary>
        public static CustomVisionErrorCodes BadRequestInvalidImportToken { get; } = new CustomVisionErrorCodes(BadRequestInvalidImportTokenValue);
        /// <summary> BadRequestExportWhileTraining. </summary>
        public static CustomVisionErrorCodes BadRequestExportWhileTraining { get; } = new CustomVisionErrorCodes(BadRequestExportWhileTrainingValue);
        /// <summary> BadRequestImageMetadataKey. </summary>
        public static CustomVisionErrorCodes BadRequestImageMetadataKey { get; } = new CustomVisionErrorCodes(BadRequestImageMetadataKeyValue);
        /// <summary> BadRequestImageMetadataValue. </summary>
        public static CustomVisionErrorCodes BadRequestImageMetadataValue { get; } = new CustomVisionErrorCodes(BadRequestImageMetadataValueValue);
        /// <summary> BadRequestOperationNotSupported. </summary>
        public static CustomVisionErrorCodes BadRequestOperationNotSupported { get; } = new CustomVisionErrorCodes(BadRequestOperationNotSupportedValue);
        /// <summary> BadRequestInvalidArtifactUri. </summary>
        public static CustomVisionErrorCodes BadRequestInvalidArtifactUri { get; } = new CustomVisionErrorCodes(BadRequestInvalidArtifactUriValue);
        /// <summary> BadRequestCustomerManagedKeyRevoked. </summary>
        public static CustomVisionErrorCodes BadRequestCustomerManagedKeyRevoked { get; } = new CustomVisionErrorCodes(BadRequestCustomerManagedKeyRevokedValue);
        /// <summary> BadRequestInvalid. </summary>
        public static CustomVisionErrorCodes BadRequestInvalid { get; } = new CustomVisionErrorCodes(BadRequestInvalidValue);
        /// <summary> UnsupportedMediaType. </summary>
        public static CustomVisionErrorCodes UnsupportedMediaType { get; } = new CustomVisionErrorCodes(UnsupportedMediaTypeValue);
        /// <summary> Forbidden. </summary>
        public static CustomVisionErrorCodes Forbidden { get; } = new CustomVisionErrorCodes(ForbiddenValue);
        /// <summary> ForbiddenUser. </summary>
        public static CustomVisionErrorCodes ForbiddenUser { get; } = new CustomVisionErrorCodes(ForbiddenUserValue);
        /// <summary> ForbiddenUserResource. </summary>
        public static CustomVisionErrorCodes ForbiddenUserResource { get; } = new CustomVisionErrorCodes(ForbiddenUserResourceValue);
        /// <summary> ForbiddenUserSignupDisabled. </summary>
        public static CustomVisionErrorCodes ForbiddenUserSignupDisabled { get; } = new CustomVisionErrorCodes(ForbiddenUserSignupDisabledValue);
        /// <summary> ForbiddenUserSignupAllowanceExceeded. </summary>
        public static CustomVisionErrorCodes ForbiddenUserSignupAllowanceExceeded { get; } = new CustomVisionErrorCodes(ForbiddenUserSignupAllowanceExceededValue);
        /// <summary> ForbiddenUserDoesNotExist. </summary>
        public static CustomVisionErrorCodes ForbiddenUserDoesNotExist { get; } = new CustomVisionErrorCodes(ForbiddenUserDoesNotExistValue);
        /// <summary> ForbiddenUserDisabled. </summary>
        public static CustomVisionErrorCodes ForbiddenUserDisabled { get; } = new CustomVisionErrorCodes(ForbiddenUserDisabledValue);
        /// <summary> ForbiddenUserInsufficientCapability. </summary>
        public static CustomVisionErrorCodes ForbiddenUserInsufficientCapability { get; } = new CustomVisionErrorCodes(ForbiddenUserInsufficientCapabilityValue);
        /// <summary> ForbiddenDRModeEnabled. </summary>
        public static CustomVisionErrorCodes ForbiddenDRModeEnabled { get; } = new CustomVisionErrorCodes(ForbiddenDRModeEnabledValue);
        /// <summary> ForbiddenInvalid. </summary>
        public static CustomVisionErrorCodes ForbiddenInvalid { get; } = new CustomVisionErrorCodes(ForbiddenInvalidValue);
        /// <summary> NotFound. </summary>
        public static CustomVisionErrorCodes NotFound { get; } = new CustomVisionErrorCodes(NotFoundValue);
        /// <summary> NotFoundProject. </summary>
        public static CustomVisionErrorCodes NotFoundProject { get; } = new CustomVisionErrorCodes(NotFoundProjectValue);
        /// <summary> NotFoundProjectDefaultIteration. </summary>
        public static CustomVisionErrorCodes NotFoundProjectDefaultIteration { get; } = new CustomVisionErrorCodes(NotFoundProjectDefaultIterationValue);
        /// <summary> NotFoundIteration. </summary>
        public static CustomVisionErrorCodes NotFoundIteration { get; } = new CustomVisionErrorCodes(NotFoundIterationValue);
        /// <summary> NotFoundIterationPerformance. </summary>
        public static CustomVisionErrorCodes NotFoundIterationPerformance { get; } = new CustomVisionErrorCodes(NotFoundIterationPerformanceValue);
        /// <summary> NotFoundTag. </summary>
        public static CustomVisionErrorCodes NotFoundTag { get; } = new CustomVisionErrorCodes(NotFoundTagValue);
        /// <summary> NotFoundImage. </summary>
        public static CustomVisionErrorCodes NotFoundImage { get; } = new CustomVisionErrorCodes(NotFoundImageValue);
        /// <summary> NotFoundDomain. </summary>
        public static CustomVisionErrorCodes NotFoundDomain { get; } = new CustomVisionErrorCodes(NotFoundDomainValue);
        /// <summary> NotFoundApimSubscription. </summary>
        public static CustomVisionErrorCodes NotFoundApimSubscription { get; } = new CustomVisionErrorCodes(NotFoundApimSubscriptionValue);
        /// <summary> NotFoundInvalid. </summary>
        public static CustomVisionErrorCodes NotFoundInvalid { get; } = new CustomVisionErrorCodes(NotFoundInvalidValue);
        /// <summary> Conflict. </summary>
        public static CustomVisionErrorCodes Conflict { get; } = new CustomVisionErrorCodes(ConflictValue);
        /// <summary> ConflictInvalid. </summary>
        public static CustomVisionErrorCodes ConflictInvalid { get; } = new CustomVisionErrorCodes(ConflictInvalidValue);
        /// <summary> ErrorUnknown. </summary>
        public static CustomVisionErrorCodes ErrorUnknown { get; } = new CustomVisionErrorCodes(ErrorUnknownValue);
        /// <summary> ErrorIterationCopyFailed. </summary>
        public static CustomVisionErrorCodes ErrorIterationCopyFailed { get; } = new CustomVisionErrorCodes(ErrorIterationCopyFailedValue);
        /// <summary> ErrorPreparePerformanceMigrationFailed. </summary>
        public static CustomVisionErrorCodes ErrorPreparePerformanceMigrationFailed { get; } = new CustomVisionErrorCodes(ErrorPreparePerformanceMigrationFailedValue);
        /// <summary> ErrorProjectInvalidWorkspace. </summary>
        public static CustomVisionErrorCodes ErrorProjectInvalidWorkspace { get; } = new CustomVisionErrorCodes(ErrorProjectInvalidWorkspaceValue);
        /// <summary> ErrorProjectInvalidPipelineConfiguration. </summary>
        public static CustomVisionErrorCodes ErrorProjectInvalidPipelineConfiguration { get; } = new CustomVisionErrorCodes(ErrorProjectInvalidPipelineConfigurationValue);
        /// <summary> ErrorProjectInvalidDomain. </summary>
        public static CustomVisionErrorCodes ErrorProjectInvalidDomain { get; } = new CustomVisionErrorCodes(ErrorProjectInvalidDomainValue);
        /// <summary> ErrorProjectTrainingRequestFailed. </summary>
        public static CustomVisionErrorCodes ErrorProjectTrainingRequestFailed { get; } = new CustomVisionErrorCodes(ErrorProjectTrainingRequestFailedValue);
        /// <summary> ErrorProjectImportRequestFailed. </summary>
        public static CustomVisionErrorCodes ErrorProjectImportRequestFailed { get; } = new CustomVisionErrorCodes(ErrorProjectImportRequestFailedValue);
        /// <summary> ErrorProjectExportRequestFailed. </summary>
        public static CustomVisionErrorCodes ErrorProjectExportRequestFailed { get; } = new CustomVisionErrorCodes(ErrorProjectExportRequestFailedValue);
        /// <summary> ErrorFeaturizationServiceUnavailable. </summary>
        public static CustomVisionErrorCodes ErrorFeaturizationServiceUnavailable { get; } = new CustomVisionErrorCodes(ErrorFeaturizationServiceUnavailableValue);
        /// <summary> ErrorFeaturizationQueueTimeout. </summary>
        public static CustomVisionErrorCodes ErrorFeaturizationQueueTimeout { get; } = new CustomVisionErrorCodes(ErrorFeaturizationQueueTimeoutValue);
        /// <summary> ErrorFeaturizationInvalidFeaturizer. </summary>
        public static CustomVisionErrorCodes ErrorFeaturizationInvalidFeaturizer { get; } = new CustomVisionErrorCodes(ErrorFeaturizationInvalidFeaturizerValue);
        /// <summary> ErrorFeaturizationAugmentationUnavailable. </summary>
        public static CustomVisionErrorCodes ErrorFeaturizationAugmentationUnavailable { get; } = new CustomVisionErrorCodes(ErrorFeaturizationAugmentationUnavailableValue);
        /// <summary> ErrorFeaturizationUnrecognizedJob. </summary>
        public static CustomVisionErrorCodes ErrorFeaturizationUnrecognizedJob { get; } = new CustomVisionErrorCodes(ErrorFeaturizationUnrecognizedJobValue);
        /// <summary> ErrorFeaturizationAugmentationError. </summary>
        public static CustomVisionErrorCodes ErrorFeaturizationAugmentationError { get; } = new CustomVisionErrorCodes(ErrorFeaturizationAugmentationErrorValue);
        /// <summary> ErrorExporterInvalidPlatform. </summary>
        public static CustomVisionErrorCodes ErrorExporterInvalidPlatform { get; } = new CustomVisionErrorCodes(ErrorExporterInvalidPlatformValue);
        /// <summary> ErrorExporterInvalidFeaturizer. </summary>
        public static CustomVisionErrorCodes ErrorExporterInvalidFeaturizer { get; } = new CustomVisionErrorCodes(ErrorExporterInvalidFeaturizerValue);
        /// <summary> ErrorExporterInvalidClassifier. </summary>
        public static CustomVisionErrorCodes ErrorExporterInvalidClassifier { get; } = new CustomVisionErrorCodes(ErrorExporterInvalidClassifierValue);
        /// <summary> ErrorPredictionServiceUnavailable. </summary>
        public static CustomVisionErrorCodes ErrorPredictionServiceUnavailable { get; } = new CustomVisionErrorCodes(ErrorPredictionServiceUnavailableValue);
        /// <summary> ErrorPredictionModelNotFound. </summary>
        public static CustomVisionErrorCodes ErrorPredictionModelNotFound { get; } = new CustomVisionErrorCodes(ErrorPredictionModelNotFoundValue);
        /// <summary> ErrorPredictionModelNotCached. </summary>
        public static CustomVisionErrorCodes ErrorPredictionModelNotCached { get; } = new CustomVisionErrorCodes(ErrorPredictionModelNotCachedValue);
        /// <summary> ErrorPrediction. </summary>
        public static CustomVisionErrorCodes ErrorPrediction { get; } = new CustomVisionErrorCodes(ErrorPredictionValue);
        /// <summary> ErrorPredictionStorage. </summary>
        public static CustomVisionErrorCodes ErrorPredictionStorage { get; } = new CustomVisionErrorCodes(ErrorPredictionStorageValue);
        /// <summary> ErrorRegionProposal. </summary>
        public static CustomVisionErrorCodes ErrorRegionProposal { get; } = new CustomVisionErrorCodes(ErrorRegionProposalValue);
        /// <summary> ErrorUnknownBaseModel. </summary>
        public static CustomVisionErrorCodes ErrorUnknownBaseModel { get; } = new CustomVisionErrorCodes(ErrorUnknownBaseModelValue);
        /// <summary> ErrorInvalid. </summary>
        public static CustomVisionErrorCodes ErrorInvalid { get; } = new CustomVisionErrorCodes(ErrorInvalidValue);
        /// <summary> Determines if two <see cref="CustomVisionErrorCodes"/> values are the same. </summary>
        public static bool operator ==(CustomVisionErrorCodes left, CustomVisionErrorCodes right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CustomVisionErrorCodes"/> values are not the same. </summary>
        public static bool operator !=(CustomVisionErrorCodes left, CustomVisionErrorCodes right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CustomVisionErrorCodes"/>. </summary>
        public static implicit operator CustomVisionErrorCodes(string value) => new CustomVisionErrorCodes(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CustomVisionErrorCodes other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CustomVisionErrorCodes other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
